!<arch>
0-isupper.c/    0           0     0     644     229       `
#include "main.h"

/**
 *_isupper - checkes for uppercase
 *@c: for the input
 * Return: 0 if its lowercase, 1 if its uppercase
 */

int _isupper(int c)
{
	if (c >= 65 && c <= 90)
	{
		return (1);
	}
	else
	{
		return (0);
	}

}

0-memset.c/     0           0     0     644     244       `
#include "main.h"

/**
 *_memset - file memory
 *@s: the string
 *@b: the char
 *@n: the number
 *Return: s area
 */

char *_memset(char *s, char b, unsigned int n)
{
	unsigned int x;

	for (x = 0; x < n; x++)
	{
		s[x] = b;
	}

	return (s);
}
0-strcat.c/     0           0     0     644     350       `
#include "main.h"

/**
 * _strcat - concatenates two strings
 * @dest: first input
 * @src: second input
 * owned by: SmoxHakim
 * Return: dest
*/

char *_strcat(char *dest, char *src)
{
	int x = 0;
	int y = 0;

	while (dest[x] != '\0')
	{
		x++;
	}

	while (src[y] != '\0')
	{
		dest[x] = src[y];
		y++;
		x++;
	}
	dest[x] = '\0';
	return (dest);
}
100-atoi.c/     0           0     0     644     438       `
#include "main.h"

/**
 * _atoi - Convert a string
 * @s: The pointer to bonvert
 * Return: A integer
 */

int _atoi(char *s)
{
	int b, str, acc;
	unsigned int cont = 0;

	b = 0;
	str = 1;
	acc = 0;

	while (s[b])
	{
		if (s[b] == 45)
		{
			str *= -1;
		}

		while (s[b] >= 48 && s[b] <= 57)
		{
			acc = 1;
			cont = (cont * 10) + (s[b] - '0');
			b++;
		}

		if (acc == 1)
		{
			break;
		}

		b++;
	}

	cont *= str;
	return (cont);
}
1-isdigit.c/    0           0     0     644     229       `
#include "main.h"

/**
 * _isdigit - checkes for uppercase
 * @c: for the input
 * Return: 1 if its a digit,  0 if its otherwise
 */

int _isdigit(int c)
{
	if (c >= 48 && c <= 57)
	{
		return (1);
	}
	else
	{
		return (0);
	}
}

1-memcpy.c/     0           0     0     644     281       `
#include "main.h"

/**
 * _memcpy - copies memory
 * @dest: the srting
 * @src: input string
 * @n: unsigned number
 * Return: dest
 */

char *_memcpy(char *dest, char *src, unsigned int n)
{

	unsigned int x;

	for (x = 0; x < n; x++)
	{
		dest[x] = src[x];
	}

	return (dest);
}

1-strncat.c/    0           0     0     644     393       `
#include "main.h"

/**
 * _strncat - concatenates two strings
 * @dest: first input
 * @src: second input
 * @n: input number
 * Return: dest
 * owned by: SmoxHakim
*/

char *_strncat(char *dest, char *src, int n)
{
	int x, y;

	for (x = 0; dest[x] != '\0'; x++)
	{
		continue;
	}
	for (y = 0; src[y] != '\0' && y < n; y++)
	{
		dest[x + y] = src[y];
	}
	dest[x + y] = '\0';
	return (dest);
}

2-strchr.c/     0           0     0     644     272       `
#include "main.h"

/**
 * _strchr - locates a character
 * @s: the stirng
 * @c: the character
 * Return: c or NULL
 */

char *_strchr(char *s, char c)
{
	unsigned int x = 0;

	for (; s[x] >= '\0'; x++)
	{
		if (s[x] == c)
		{
			return (s + x);
		}
	}

	return (NULL);
}
2-strlen.c/     0           0     0     644     200       `
#include "main.h"

/**
 * _strlen - returns the length
 * @s: thr input
 * Return: the length
 */

int _strlen(char *s)
{
	int leng = 0;

	while (*s != '\0')
	{
		leng++;
		s++;
	}

	return (leng);
}
2-strncpy.c/    0           0     0     644     348       `
#include "main.h"

/**
 * _strncpy - copy two strings
 * @dest: first input
 * @src: second input
 * @n: input number
 * Return: dest
 * owned by: SmoxHakim
*/

char *_strncpy(char *dest, char *src, int n)
{
	int x;

	for (x = 0; x < n && src[x] != '\0'; x++)
	{
		dest[x] = src[x];
	}
	for (; x < n; x++)
	{
	dest[x] = '\0';
	}
	return (dest);

}
3-islower.c/    0           0     0     644     243       `
#include "main.h"

/**
 *
 * _islower - check if the charachter is lower
 * @c: the input from the user
 * Return: 1 if c is lower case and 0 if otherwise
 */

int _islower(int c)
{
	if (c >= 97 && c <= 122)
	{
		return (1);
	}
	return (0);
}

3-puts.c/       0           0     0     644     172       `
#include "main.h"

/**
 * _puts - print a string
 * @str: the input
 */

void _puts(char *str)
{
	while (*str != '\0')
	{
		_putchar(*str);
			str++;
	}
	_putchar('\n');
}
3-strcmp.c/     0           0     0     644     332       `
#include "main.h"

/**
 * _strcmp - compare two strings
 * @s1: first input
 * @s2: second input
 * owned by: SmoxHakim
 * Return: resutlt
*/

int _strcmp(char *s1, char *s2)
{
	while (((*s1 != '\0') && (*s2 != '\0')) && (*s1 == *s2))
	{
		s1++;
		s2++;
	}

	if (*s1 == *s2)
	{
		return (0);
	}

	else
	{
		return (*s1 - *s2);
	}
}
3-strspn.c/     0           0     0     644     369       `
#include "main.h"

/**
 * _strspn - gets the langh
 * @s: the string
 * @accept: the count
 * Return: x
 */

unsigned int _strspn(char *s, char *accept)
{
	unsigned int x, y, l;

	for (x = 0; s[x] != '\0'; x++)
	{
		l = 1;
		for (y = 0; accept[y] != '\0'; y++)
		{
			if (s[x] == accept[y])
			{
				l = 0;
				break;
			}
		}
		if (l == 1)
			break;
	}
	return (x);
}

4-isalpha.c/    0           0     0     644     289       `
#include "main.h"

/**
 * _isalpha - checks for lowercase character
 * @c: charachter to be checked
 * Return: 1 if lowercase or  if 0 is not lower
 *
 */

int _isalpha(int c)
{
	if (c >= 97 && c <= 122)
	{
		return (1);
	}
	else if (c >= 65 && c <= 90)
	{
		return (1);
	}
	return (0);
}

4-strpbrk.c/    0           0     0     644     295       `
#include "main.h"

/**
 * _strpbrk - function that searches
 * @s:first
 * @accept: matche
 *
 * Return: pointer
 */
char *_strpbrk(char *s, char *accept)
{
	int x;
		while (*s)
		{
			for (x = 0; accept[x]; x++)
			{
				if (*s == accept[x])
					return (s);
			}
			s++;
		}
	return (NULL);
}

5-strstr.c/     0           0     0     644     434       `
#include "main.h"

/**
 * _strstr - locates
 * @haystack: string
 * @needle: first
 * Return: a pointer
 */
char *_strstr(char *haystack, char *needle)
{
	unsigned int x, y;

	x = 0;
	y = 0;


	while (haystack[x])
	{
		while (needle[y] && (haystack[x] == needle[0]))
		{
			if (haystack[x + y] == needle[y])
				y++;
			else
				break;
		}
		if (needle[y])
		{
			x++;
			y = 0;
		}
		else
			return (haystack + x);
	}
	return (0);
}
6-abs.c/        0           0     0     644     258       `
#include "main.h"

/**
 * _abs - Computes the absolute value of an integer.
 * @n: The integer to be computed.
 *
 * Return: The absolute value of the integer.
 */

int _abs(int n)
{
	if (n >= 0)
	{
		return (n);
	}
	else
	{
		return (-n);
	}
	return (0);
}
9-strcpy.c/     0           0     0     644     270       `
#include "main.h"
/**
 * _strcpy - copy the string
 * @dest: char to check
 * @src: char to check
 * Return: 0 is success
 */
char *_strcpy(char *dest, char *src)
{
	int i;

	for (i = 0; src[i] != '\0'; i++)
	{
		dest[i] = src[i];
	}
	dest[i] = '\0';

	return (dest);
}
main.c/         0           0     0     644     148       `
#include "main.h"

int main(void)
{
    _puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
    return (0);
}
_putchar.c/     0           0     0     644     226       `
#include "main.h"
#include <stdio.h>

/**
 * _putchar - function that print one charachter
 *
 * @ch: the input charachter
 *
 * Return: 1 if success and -1 if wrong
 */

int _putchar(char ch)
{
	return (write(1, &ch, 1));

}
